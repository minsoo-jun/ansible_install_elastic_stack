# ======================== Elasticsearch Configuration =========================
#
# NOTE: Elasticsearch comes with reasonable defaults for most settings.
#       Before you set out to tweak and tune the configuration, make sure you
#       understand what are you trying to accomplish and the consequences.
#
# The primary way of configuring a node is via this file. This template lists
# the most important settings you may want to configure for a production cluster.
#
# Please consult the documentation for further information on configuration options:
# https://www.elastic.co/guide/en/elasticsearch/reference/index.html
#
# ---------------------------------- Cluster -----------------------------------
#
# Use a descriptive name for your cluster:
#
cluster.name: {{ ES_CLUSTER_NAME }}
#
# ------------------------------------ Node ------------------------------------
#
# Use a descriptive name for the node:
#
node.name: {{ NODE_NAME }}{{ item.node }}
#
# Add custom attributes to the node:
#
#node.attr.rack: r1
#
# ----------------------------------- Paths ------------------------------------
#
# Path to directory where to store the data (separate multiple locations by comma):
#
path.data: {{ ES_DATA_PATH }}/data/{{ item.node }}
#
# Path to log files:
#
path.logs: {{ ES_DATA_PATH }}/logs/{{ item.node }}
#
# ----------------------------------- Memory -----------------------------------
#
# Lock the memory on startup:
#
bootstrap.memory_lock: {{ ES_MEMORY_LOCK }}
#
# Make sure that the heap size is set to about half the memory available
# on the system and that the owner of the process is allowed to use this
# limit.
#
# Elasticsearch performs poorly when the system is swapping the memory.
#
# ---------------------------------- Network -----------------------------------
#
# Set the bind address to a specific IP (IPv4 or IPv6):
#
#network.host: {{ IPV4_ADDR }}
network.host: {{ ES_NETWORK_HOST }}
#
# Set a custom port for HTTP:dmd
#
http.port: {{ item.port }}

# Set tcp port for
transport.tcp.port: {{ item.tcp_port }}
#
# For more information, consult the network module documentation.
#
# --------------------------------- Discovery ----------------------------------
#
# Pass an initial list of hosts to perform discovery when this node is started:
# The default list of hosts is ["127.0.0.1", "[::1]"]

# ES_SERVER_NODES_INFO
#discovery.zen.ping.unicast.hosts: ["host1", "host2"]
# max node per server 3
{% set hosts = '' -%}
{% for host in groups['es-servers'] -%}
{% if ES_SERVER_NODES_INFO|length == 1 %}
{% if loop.last -%}
{% set hosts = hosts + '"' + host + ':' ~ ES_SERVER_NODES_INFO[0].tcp_port + '"'  -%}
discovery.seed_hosts: [{{ hosts }}]
{% else -%}
{% set hosts = hosts + '"' + host + ':' ~ ES_SERVER_NODES_INFO[0].tcp_port + '"' + ', '  -%}
{% endif -%}
{% endif %}
{% if ES_SERVER_NODES_INFO|length == 2 %}
{% if loop.last -%}
{% set hosts = hosts + '"' + host + ':' ~ ES_SERVER_NODES_INFO[0].tcp_port + '"' + ', ' + '"' + host + ':' ~ ES_SERVER_NODES_INFO[1].tcp_port + '"' -%}
discovery.seed_hosts: [{{ hosts }}]
{% else -%}
{% set hosts = hosts + '"' + host + ':' ~ ES_SERVER_NODES_INFO[0].tcp_port + '"' + ', ' + '"' + host + ':' ~ ES_SERVER_NODES_INFO[1].tcp_port + '"' + ', '  -%}
{% endif -%}
{% endif %}
{% if ES_SERVER_NODES_INFO|length == 3 %}
{% if loop.last -%}
{% set hosts = hosts + '"' + host + ':' ~ ES_SERVER_NODES_INFO[0].tcp_port + '"'  + ', ' + '"' + host + ':' ~ ES_SERVER_NODES_INFO[1].tcp_port + '"' + ', ' + '"' + host + ':' ~ ES_SERVER_NODES_INFO[2].tcp_port + '"' -%}
discovery.seed_hosts: [{{ hosts }}]
{% else -%}
{% set hosts = hosts + '"' + host + ':' ~ ES_SERVER_NODES_INFO[0].tcp_port + '"' + ', ' + '"' + host + ':' ~ ES_SERVER_NODES_INFO[1].tcp_port + '"' + ', '  + '"' + host + ':' ~ ES_SERVER_NODES_INFO[2].tcp_port + '"' + ', ' -%}
{% endif -%}
{{ ES_SERVER_NODES_INFO[0].port }}
{% endif %}
{% endfor -%}

# Bootstrap the cluster using an initial set of master-eligible nodes:
# need to fix
cluster.initial_master_nodes: ["{{ NODE_NAME }}{{ item.node }}"]
#
# ---------------------------------- Gateway -----------------------------------
#
# Block initial recovery after a full cluster restart until N nodes are started:
#
#gateway.recover_after_nodes: 3
#
# For more information, consult the gateway module documentation.
#
# ---------------------------------- Various -----------------------------------
#
# Require explicit names when deleting indices:
#
#action.destructive_requires_name: true

# add CORS setting
http.cors.enabled: true
http.cors.allow-origin: "*"